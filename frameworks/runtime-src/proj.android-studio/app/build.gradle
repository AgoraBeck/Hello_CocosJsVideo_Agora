apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "org.cocos2dx.Hello_CocosJsVideo_Agora"
        minSdkVersion 10
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
	
	 ndk {
            abiFilters 'armeabi-v7a' //'x86 ',  'arm64-v8a'
        }
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
		debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }

    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: '../../../../AgoraGamingSDK/libs/android')
    compile project(':libcocos2dx')
    compile 'com.android.support:support-v4:25.0.0'
}


task cleanAssets(type: Delete) {
    delete 'assets'
}
task copyAssets(type: Copy) {
    from('../../../cocos2d-x/cocos/scripting/js-bindings/') {
        include 'script/**'
    }
    from('../../../../') {
        include 'res/**'
        include 'src/**'
        include 'main.js'
        include 'project.json'
    }
    from '../../Resources'
    
    into 'assets'
}

clean.dependsOn cleanAssets
preBuild.dependsOn copyAssets
